/*
Copyright (c) 2021 David Allison <davidallisongithub@gmail.com>
Copyright (c) 2021 Shridhar Goel <shridhar.goel@gmail.com>

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see <http://www.gnu.org/licenses/>.

This file incorporates work covered by the following copyright and
permission notice:

    Copyright 2021 David Allison <davidallisongithub@gmail.com>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

// This file is documented: docs/kotlin-migration.md

// Example of class name: "/com/ichi2/anki/UIUtils.kt"
// Ensure that it starts with '/' (slash)
def source = Source.MAIN
def className = ""

enum Source {
    MAIN("/src/main/java"),
    TEST("/src/test/java"),
    ANDROID_TEST("/src/androidTest/java") // untested
    public String path
    private Source(String pathSubset) {
        this.path = pathSubset
    }
}

static def isKotlinCompile(Object t) {
    def clazz = t.class
    while (clazz.superclass != null) {
        // importing caused a different class to be used
        if (clazz.name == "org.jetbrains.kotlin.gradle.tasks.KotlinCompile") {
            return true
        }
        clazz = clazz.superclass

    }
    return false
}

allprojects {
    afterEvaluate {
        tasks.all {
            if (!className.isEmpty() && isKotlinCompile(it)) {
                it.exclude('**' + className)
            }
        }
    }
}



android {
    ktlint {
        filter {
            if (!className.isEmpty()) {
                exclude('**' + className)
            }
        }
    }
}

task copySingleFileInGradle {
    if (className.isEmpty()) return

    doFirst {
        def path = projectDir.absolutePath + source.path + className
        def newPath = path.replace(".kt", ".java")

        def src = new File(path)
        def dst = new File(newPath)
        dst.write(src.text)
    }
}

task deleteSingleFileInGradle {
    if (className.isEmpty()) return

    doFirst {
        def path = projectDir.absolutePath + source.path + className
        def newPath = path.replace(".kt", ".java")
        def dst = new File(newPath)
        if (dst.directory) {
            throw IllegalStateException("should be a file")
        }
        dst.delete()
    }
}

tasks.withType(JavaCompile).configureEach {
    it.dependsOn copySingleFileInGradle
    it.finalizedBy deleteSingleFileInGradle
}
